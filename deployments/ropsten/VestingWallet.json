{
  "address": "0xb84dcf988067D74a62754b114C53bb1a608D3179",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NoGovernanceZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyGovernance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyPendingGovernance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongLengthAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "releaseDate",
          "type": "uint256"
        }
      ],
      "name": "BenefitAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "releasedAmount",
          "type": "uint256"
        }
      ],
      "name": "BenefitReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "removedAmount",
          "type": "uint256"
        }
      ],
      "name": "BenefitRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "DustSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_pendingGovernance",
          "type": "address"
        }
      ],
      "name": "GovernanceProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "GovernanceSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addBenefit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "__beneficiaries",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "addBenefits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "benefits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "released",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBeneficiaries",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "getTokensOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "releasableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "releaseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "releaseDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "removeBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "removeBenefit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "sendDust",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalAmountPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x49b3600bcef78fef1a5ea2f468b158e93eb7f324915cf5ab364a848b0386a6d2",
  "receipt": {
    "to": null,
    "from": "0x7D4BF49D39374BdDeB2aa70511c2b772a0Bcf91e",
    "contractAddress": "0xb84dcf988067D74a62754b114C53bb1a608D3179",
    "transactionIndex": 15,
    "gasUsed": "1417245",
    "logsBloom": "0x
    "blockHash": "0xb854191b3e92a921d3c720c7d6f33ff56c2fd9aab198aa4f2a920554d0aeeb1c",
    "transactionHash": "0x49b3600bcef78fef1a5ea2f468b158e93eb7f324915cf5ab364a848b0386a6d2",
    "logs": [],
    "blockNumber": 11866662,
    "cumulativeGasUsed": "3757226",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7D4BF49D39374BdDeB2aa70511c2b772a0Bcf91e"
  ],
  "solcInputHash": "a7632792b07b0fa04cd723d5edc45db5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoGovernanceZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyGovernance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPendingGovernance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongLengthAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseDate\",\"type\":\"uint256\"}],\"name\":\"BenefitAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releasedAmount\",\"type\":\"uint256\"}],\"name\":\"BenefitReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removedAmount\",\"type\":\"uint256\"}],\"name\":\"BenefitRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"DustSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_pendingGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"GovernanceSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addBenefit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"__beneficiaries\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"addBenefits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"benefits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBeneficiaries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getTokensOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"releasableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"releaseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"releaseDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"removeBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"removeBenefit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"sendDust\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalAmountPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addBenefit(address,uint256,uint256,address,uint256)\":{\"details\":\"It will claim all previous benefits.\",\"params\":{\"_amount\":\"Amount of vested token for the inputted beneficiary\",\"_beneficiary\":\"Address of the beneficiary\",\"_duration\":\"Seconds to unlock the full benefit\",\"_startDate\":\"Timestamp at which the benefit starts to take effect\",\"_token\":\"Address of ERC20 token to be vested\"}},\"addBenefits(address,address[],uint256[],uint256,uint256)\":{\"params\":{\"_amounts\":\"Amounts of vested token for each beneficiary\",\"_beneficiaries\":\"Addresses of the beneficiaries\",\"_duration\":\"Seconds to unlock the full benefit\",\"_startDate\":\"Timestamp at which the benefit starts to take effect\",\"_token\":\"Address of ERC20 token to be vested\"}},\"getBeneficiaries()\":{\"returns\":{\"_0\":\"List of beneficiaries\"}},\"getTokens()\":{\"returns\":{\"_0\":\"List of vested tokens\"}},\"getTokensOf(address)\":{\"params\":{\"_beneficiary\":\"Address of the beneficiary\"},\"returns\":{\"_0\":\"List of vested tokens\"}},\"releasableAmount(address,address)\":{\"details\":\"If the vesting period did not end, it returns a proportional claimable amountIf the vesting period is over, it returns the complete vested amount\",\"params\":{\"_beneficiary\":\"Address of the beneficiary\",\"_token\":\"Address of ERC20 token to be vested\"},\"returns\":{\"_0\":\"The amount of the vested token the beneficiary can claim at this point in time\"}},\"release(address)\":{\"params\":{\"_token\":\"Address of ERC20 token to be vested\"}},\"release(address,address)\":{\"params\":{\"_beneficiary\":\"Address of the beneficiary\",\"_token\":\"Address of ERC20 token to be vested\"}},\"release(address[])\":{\"params\":{\"_tokens\":\"List of ERC20 token to be vested\"}},\"release(address[],address)\":{\"params\":{\"_beneficiary\":\"Address of the beneficiary\",\"_tokens\":\"List of ERC20 token to be vested\"}},\"releaseAll(address)\":{\"params\":{\"_beneficiary\":\"Address of the beneficiary\"}},\"releaseDate(address,address)\":{\"params\":{\"_beneficiary\":\"Address of the beneficiary\",\"_token\":\"Address of ERC20 vested token\"},\"returns\":{\"_0\":\"The timestamp at which benefit will be fully released.\"}},\"removeBeneficiary(address)\":{\"params\":{\"_beneficiary\":\"Address of the beneficiary\"}},\"removeBenefit(address,address)\":{\"params\":{\"_beneficiary\":\"Address of the beneficiary\",\"_token\":\"Address of ERC20 token to be vested\"}},\"sendDust(address)\":{\"params\":{\"_token\":\"The token that will be transferred\"}},\"setGovernance(address)\":{\"params\":{\"_governance\":\"The address of the user proposed to be the new governance\"}}},\"stateVariables\":{\"benefits\":{\"params\":{\"_beneficiary\":\"Address of the beneficiary\",\"_token\":\"Address of ERC20 token to be vested\"},\"returns\":{\"amount\":\"Amount of vested token for the inputted beneficiary\",\"duration\":\"Seconds to unlock the full benefit\",\"released\":\"The amount of vested tokens already released\",\"startDate\":\"Timestamp at which the benefit starts to take effect\"}},\"totalAmountPerToken\":{\"params\":{\"_token\":\"Address of ERC20 token to be vested\"},\"return\":\"_totalAmount The total amount of requested tokens\",\"returns\":{\"_0\":\"_totalAmount The total amount of requested tokens\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NoGovernanceZeroAddress()\":[{\"notice\":\"Throws if trying to set governance to zero address\"}],\"OnlyGovernance()\":[{\"notice\":\"Throws if the caller of the function is not governance\"}],\"OnlyPendingGovernance()\":[{\"notice\":\"Throws if the caller of the function is not pendingGovernance\"}],\"WrongLengthAmounts()\":[{\"notice\":\"Throws when the length of the amounts do not match\"}],\"ZeroAddress()\":[{\"notice\":\"Throws if a variable is assigned to the zero address\"}]},\"events\":{\"BenefitAdded(address,address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a benefit is successfully added\"},\"BenefitReleased(address,address,uint256)\":{\"notice\":\"Emitted when a benefit is successfully released\"},\"BenefitRemoved(address,address,uint256)\":{\"notice\":\"Emitted when a benefit is successfully removed\"},\"DustSent(address,uint256,address)\":{\"notice\":\"Emitted when dust is sent\"},\"GovernanceProposal(address)\":{\"notice\":\"Emitted when a new governance is proposed\"},\"GovernanceSet(address)\":{\"notice\":\"Emitted when pendingGovernance accepts to be governance\"}},\"kind\":\"user\",\"methods\":{\"acceptGovernance()\":{\"notice\":\"Changes the governance from the current governance to the previously proposed address\"},\"addBenefit(address,uint256,uint256,address,uint256)\":{\"notice\":\"Creates a vest for a given beneficiary.\"},\"addBenefits(address,address[],uint256[],uint256,uint256)\":{\"notice\":\"Creates benefits for a group of beneficiaries\"},\"benefits(address,address)\":{\"notice\":\"Returns the benefit data for a given token and beneficiary\"},\"getBeneficiaries()\":{\"notice\":\"Lists users with an ongoing benefit\"},\"getTokens()\":{\"notice\":\"Lists all the tokens that are currently vested\"},\"getTokensOf(address)\":{\"notice\":\"Lists the current vested tokens for the given address\"},\"governance()\":{\"notice\":\"Stores the governance address\"},\"pendingGovernance()\":{\"notice\":\"Stores the pendingGovernance address\"},\"releasableAmount(address,address)\":{\"notice\":\"Returns the claimable amount of a vested token for a specific beneficiary\"},\"release(address)\":{\"notice\":\"Releases a token in its correspondent amount to the function caller\"},\"release(address,address)\":{\"notice\":\"Releases a token in its correspondent amount to a particular beneficiary\"},\"release(address[])\":{\"notice\":\"Releases a list of tokens in their correspondent amounts to the function caller\"},\"release(address[],address)\":{\"notice\":\"Releases a list of tokens in their correspondent amounts to a particular beneficiary\"},\"releaseAll()\":{\"notice\":\"Releases all tokens in their correspondent amounts to the function caller\"},\"releaseAll(address)\":{\"notice\":\"Releases all tokens in their correspondent amounts to a particular beneficiary\"},\"releaseDate(address,address)\":{\"notice\":\"Returns the end date of a vesting period\"},\"removeBeneficiary(address)\":{\"notice\":\"Removes all benefits from a given beneficiaryReleases the claimable balances and transfers the pending benefits to governance\"},\"removeBenefit(address,address)\":{\"notice\":\"Removes a given benefitReleases the claimable balance and transfers the pending benefit to governance\"},\"sendDust(address)\":{\"notice\":\"Allows an authorized user to transfer the tokens or eth that may have been left in a contract\"},\"setGovernance(address)\":{\"notice\":\"Proposes a new address to be governance\"},\"totalAmountPerToken(address)\":{\"notice\":\"Returns the total amount of the given vested token across all beneficiaries\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VestingWallet.sol\":\"VestingWallet\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n}\\n\",\"keccak256\":\"0x49ebdac5d515aebb95168564158940b79d7d5d12fbfe59cec546a00d57fee64a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastvalue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastvalue;\\n                // Update the index for the moved value\\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        return _values(set._inner);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x3778dc944f4a696335878bad8beca60f38b7c79b7a0bd8ddbeb618bd502a95ae\",\"license\":\"MIT\"},\"contracts/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4 <0.9.0;\\n\\nimport './interfaces/IGovernable.sol';\\n\\nabstract contract Governable is IGovernable {\\n  /// @inheritdoc IGovernable\\n  address public override governance;\\n\\n  /// @inheritdoc IGovernable\\n  address public override pendingGovernance;\\n\\n  constructor(address _governance) {\\n    if (_governance == address(0)) revert NoGovernanceZeroAddress();\\n    governance = _governance;\\n  }\\n\\n  /// @inheritdoc IGovernable\\n  function setGovernance(address _governance) external override onlyGovernance {\\n    pendingGovernance = _governance;\\n    emit GovernanceProposal(_governance);\\n  }\\n\\n  /// @inheritdoc IGovernable\\n  function acceptGovernance() external override onlyPendingGovernance {\\n    governance = pendingGovernance;\\n    delete pendingGovernance;\\n    emit GovernanceSet(governance);\\n  }\\n\\n  /// @notice Functions with this modifier can only be called by governance\\n  modifier onlyGovernance() {\\n    if (msg.sender != governance) revert OnlyGovernance();\\n    _;\\n  }\\n\\n  /// @notice Functions with this modifier can only be called by pendingGovernance\\n  modifier onlyPendingGovernance() {\\n    if (msg.sender != pendingGovernance) revert OnlyPendingGovernance();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xb8de014d3657125f7cba3e92a5beaf67bba7df05f00eff1a843ec43384e3e64b\",\"license\":\"MIT\"},\"contracts/VestingWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/*\\n\\nCoded with \\u2665 by\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2003\\u2003\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u2003\\u2003\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2003\\u2003\\u2591\\u255a\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2003\\u2003\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2554\\u2550\\u2588\\u2588\\u2588\\u2588\\u2551\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2003\\u2003\\u2591\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u255a\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2003\\u2003\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\nhttps://defi.sucks\\n\\n*/\\n\\npragma solidity >=0.8.4 <0.9.0;\\n\\nimport '@openzeppelin/contracts/utils/math/Math.sol';\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\nimport '@openzeppelin/contracts/utils/structs/EnumerableSet.sol';\\nimport './Governable.sol';\\nimport './interfaces/IVestingWallet.sol';\\n\\ncontract VestingWallet is IVestingWallet, Governable {\\n  using SafeERC20 for IERC20;\\n  using EnumerableSet for EnumerableSet.AddressSet;\\n\\n  EnumerableSet.AddressSet internal _vestedTokens;\\n  EnumerableSet.AddressSet internal _beneficiaries;\\n  /// @inheritdoc IVestingWallet\\n  mapping(address => uint256) public override totalAmountPerToken; // token => amount\\n  /// @inheritdoc IVestingWallet\\n  mapping(address => mapping(address => Benefit)) public override benefits; // token => beneficiary => benefit\\n  mapping(address => EnumerableSet.AddressSet) internal _tokensPerBeneficiary; // beneficiary => [tokens]\\n\\n  constructor(address _governance) Governable(_governance) {}\\n\\n  // Views\\n\\n  /// @inheritdoc IVestingWallet\\n  function releaseDate(address _token, address _beneficiary) external view override returns (uint256) {\\n    Benefit memory _benefit = benefits[_token][_beneficiary];\\n\\n    return _benefit.startDate + _benefit.duration;\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function releasableAmount(address _token, address _beneficiary) external view override returns (uint256) {\\n    Benefit memory _benefit = benefits[_token][_beneficiary];\\n\\n    return _releasableSchedule(_benefit) - _benefit.released;\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function getBeneficiaries() external view override returns (address[] memory) {\\n    return _beneficiaries.values();\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function getTokens() external view override returns (address[] memory) {\\n    return _vestedTokens.values();\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function getTokensOf(address _beneficiary) external view override returns (address[] memory) {\\n    return _tokensPerBeneficiary[_beneficiary].values();\\n  }\\n\\n  // Methods\\n\\n  /// @inheritdoc IVestingWallet\\n  function addBenefit(\\n    address _beneficiary,\\n    uint256 _startDate,\\n    uint256 _duration,\\n    address _token,\\n    uint256 _amount\\n  ) external override onlyGovernance {\\n    _addBenefit(_beneficiary, _startDate, _duration, _token, _amount);\\n    totalAmountPerToken[_token] += _amount;\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function addBenefits(\\n    address _token,\\n    address[] calldata __beneficiaries,\\n    uint256[] calldata _amounts,\\n    uint256 _startDate,\\n    uint256 _duration\\n  ) external override onlyGovernance {\\n    uint256 _length = __beneficiaries.length;\\n    if (_length != _amounts.length) revert WrongLengthAmounts();\\n\\n    uint256 _vestedAmount;\\n\\n    for (uint256 _i; _i < _length; _i++) {\\n      _addBenefit(__beneficiaries[_i], _startDate, _duration, _token, _amounts[_i]);\\n      _vestedAmount += _amounts[_i];\\n    }\\n\\n    totalAmountPerToken[_token] += _vestedAmount;\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _vestedAmount);\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function removeBenefit(address _token, address _beneficiary) external override onlyGovernance {\\n    _removeBenefit(_token, _beneficiary);\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function removeBeneficiary(address _beneficiary) external override onlyGovernance {\\n    while (_tokensPerBeneficiary[_beneficiary].length() > 0) {\\n      _removeBenefit(_tokensPerBeneficiary[_beneficiary].at(0), _beneficiary);\\n    }\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function release(address _token) external override {\\n    _release(_token, msg.sender);\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function release(address _token, address _beneficiary) external override {\\n    _release(_token, _beneficiary);\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function release(address[] calldata _tokens) external override {\\n    uint256 _length = _tokens.length;\\n    address _beneficiary = msg.sender;\\n    for (uint256 _i; _i < _length; _i++) {\\n      _release(_tokens[_i], _beneficiary);\\n    }\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function release(address[] calldata _tokens, address _beneficiary) external override {\\n    uint256 _length = _tokens.length;\\n    for (uint256 _i; _i < _length; _i++) {\\n      _release(_tokens[_i], _beneficiary);\\n    }\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function releaseAll() external override {\\n    address[] memory _tokens = _tokensPerBeneficiary[msg.sender].values();\\n    uint256 _length = _tokens.length;\\n    for (uint256 _i; _i < _length; _i++) {\\n      _release(_tokens[_i], msg.sender);\\n    }\\n  }\\n\\n  /// @inheritdoc IVestingWallet\\n  function releaseAll(address _beneficiary) external override {\\n    address[] memory _tokens = _tokensPerBeneficiary[_beneficiary].values();\\n    uint256 _length = _tokens.length;\\n    for (uint256 _i; _i < _length; _i++) {\\n      _release(_tokens[_i], _beneficiary);\\n    }\\n  }\\n\\n  /// @inheritdoc IDustCollector\\n  function sendDust(address _token) external override onlyGovernance {\\n    uint256 _amount;\\n\\n    _amount = IERC20(_token).balanceOf(address(this)) - totalAmountPerToken[_token];\\n    IERC20(_token).safeTransfer(governance, _amount);\\n\\n    emit DustSent(_token, _amount, governance);\\n  }\\n\\n  // Internal\\n\\n  function _addBenefit(\\n    address _beneficiary,\\n    uint256 _startDate,\\n    uint256 _duration,\\n    address _token,\\n    uint256 _amount\\n  ) internal {\\n    if (_tokensPerBeneficiary[_beneficiary].contains(_token)) {\\n      _release(_token, _beneficiary);\\n    }\\n\\n    _beneficiaries.add(_beneficiary);\\n    _vestedTokens.add(_token);\\n    _tokensPerBeneficiary[_beneficiary].add(_token);\\n\\n    Benefit storage _benefit = benefits[_token][_beneficiary];\\n    _benefit.startDate = _startDate;\\n    _benefit.duration = _duration;\\n\\n    uint256 pendingAmount = _benefit.amount - _benefit.released;\\n    _benefit.amount = _amount + pendingAmount;\\n    _benefit.released = 0;\\n\\n    emit BenefitAdded(_token, _beneficiary, _benefit.amount, _startDate, _startDate + _duration);\\n  }\\n\\n  function _release(address _token, address _beneficiary) internal {\\n    Benefit storage _benefit = benefits[_token][_beneficiary];\\n\\n    uint256 _releasable = _releasableSchedule(_benefit) - _benefit.released;\\n\\n    if (_releasable == 0) {\\n      return;\\n    }\\n\\n    _benefit.released += _releasable;\\n    totalAmountPerToken[_token] -= _releasable;\\n\\n    if (_benefit.released == _benefit.amount) {\\n      _deleteBenefit(_token, _beneficiary);\\n    }\\n\\n    SafeERC20.safeTransfer(IERC20(_token), _beneficiary, _releasable);\\n\\n    emit BenefitReleased(_token, _beneficiary, _releasable);\\n  }\\n\\n  function _removeBenefit(address _token, address _beneficiary) internal {\\n    _release(_token, _beneficiary);\\n\\n    Benefit storage _benefit = benefits[_token][_beneficiary];\\n\\n    uint256 _transferToOwner = _benefit.amount - _benefit.released;\\n\\n    totalAmountPerToken[_token] -= _transferToOwner;\\n\\n    if (_transferToOwner != 0) {\\n      IERC20(_token).safeTransfer(msg.sender, _transferToOwner);\\n    }\\n\\n    _deleteBenefit(_token, _beneficiary);\\n\\n    emit BenefitRemoved(_token, _beneficiary, _transferToOwner);\\n  }\\n\\n  function _releasableSchedule(Benefit memory _benefit) internal view returns (uint256) {\\n    uint256 _timestamp = block.timestamp;\\n    uint256 _start = _benefit.startDate;\\n    uint256 _duration = _benefit.duration;\\n    uint256 _totalAllocation = _benefit.amount;\\n\\n    if (_timestamp <= _start) {\\n      return 0;\\n    } else {\\n      return Math.min(_totalAllocation, (_totalAllocation * (_timestamp - _start)) / _duration);\\n    }\\n  }\\n\\n  function _deleteBenefit(address _token, address _beneficiary) internal {\\n    delete benefits[_token][_beneficiary];\\n\\n    _tokensPerBeneficiary[_beneficiary].remove(_token);\\n\\n    if (_tokensPerBeneficiary[_beneficiary].length() == 0) {\\n      _beneficiaries.remove(_beneficiary);\\n    }\\n\\n    if (totalAmountPerToken[_token] == 0) {\\n      _vestedTokens.remove(_token);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x3eb66a6f4b25373660bfae9ae60b2d2cfe493b8045270ef4df8d74cdbe5766bd\",\"license\":\"MIT\"},\"contracts/interfaces/IBaseErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.4 <0.9.0;\\n\\ninterface IBaseErrors {\\n  /// @notice Throws if a variable is assigned to the zero address\\n  error ZeroAddress();\\n}\\n\",\"keccak256\":\"0x9130019a08d9eaedfb920a323fed5c7f409736cd918f1a32921c93551b3ee00e\",\"license\":\"MIT\"},\"contracts/interfaces/IDustCollector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.4 <0.9.0;\\n\\nimport './IBaseErrors.sol';\\n\\ninterface IDustCollector is IBaseErrors {\\n  /// @notice Emitted when dust is sent\\n  /// @param _to The address which wil received the funds\\n  /// @param _token The token that will be transferred\\n  /// @param _amount The amount of the token that will be transferred\\n  event DustSent(address _token, uint256 _amount, address _to);\\n\\n  /// @notice Allows an authorized user to transfer the tokens or eth that may have been left in a contract\\n  /// @param _token The token that will be transferred\\n  function sendDust(address _token) external;\\n}\\n\",\"keccak256\":\"0xd1604ea25430ee3ba779272060ede842c0451a7a288e79acdb0eb8e9f30c773f\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4 <0.9.0;\\n\\n/// @title Governable contract\\n/// @notice Manages the governance role\\ninterface IGovernable {\\n  // Events\\n\\n  /// @notice Emitted when pendingGovernance accepts to be governance\\n  /// @param _governance Address of the new governance\\n  event GovernanceSet(address _governance);\\n\\n  /// @notice Emitted when a new governance is proposed\\n  /// @param _pendingGovernance Address that is proposed to be the new governance\\n  event GovernanceProposal(address _pendingGovernance);\\n\\n  // Errors\\n\\n  /// @notice Throws if the caller of the function is not governance\\n  error OnlyGovernance();\\n\\n  /// @notice Throws if the caller of the function is not pendingGovernance\\n  error OnlyPendingGovernance();\\n\\n  /// @notice Throws if trying to set governance to zero address\\n  error NoGovernanceZeroAddress();\\n\\n  // Variables\\n\\n  /// @notice Stores the governance address\\n  /// @return _governance The governance addresss\\n  function governance() external view returns (address _governance);\\n\\n  /// @notice Stores the pendingGovernance address\\n  /// @return _pendingGovernance The pendingGovernance addresss\\n  function pendingGovernance() external view returns (address _pendingGovernance);\\n\\n  // Methods\\n\\n  /// @notice Proposes a new address to be governance\\n  /// @param _governance The address of the user proposed to be the new governance\\n  function setGovernance(address _governance) external;\\n\\n  /// @notice Changes the governance from the current governance to the previously proposed address\\n  function acceptGovernance() external;\\n}\\n\",\"keccak256\":\"0xbf544faa1011d7772f891f3cbfd9966602a6a2bc596e3492dc117fcf4765d9ce\",\"license\":\"MIT\"},\"contracts/interfaces/IVestingWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4 <0.9.0;\\n\\nimport './IDustCollector.sol';\\n\\n/// @title VestingWallet contract\\n/// @notice Handles the vesting of ERC20 tokens for multiple beneficiaries\\ninterface IVestingWallet is IDustCollector {\\n  // Errors\\n\\n  /// @notice Throws when the length of the amounts do not match\\n  error WrongLengthAmounts();\\n\\n  // Events\\n\\n  /// @notice Emitted when a benefit is successfully added\\n  event BenefitAdded(address indexed token, address indexed beneficiary, uint256 amount, uint256 startDate, uint256 releaseDate);\\n\\n  /// @notice Emitted when a benefit is successfully removed\\n  event BenefitRemoved(address indexed token, address indexed beneficiary, uint256 removedAmount);\\n\\n  /// @notice Emitted when a benefit is successfully released\\n  event BenefitReleased(address indexed token, address indexed beneficiary, uint256 releasedAmount);\\n\\n  // Structs\\n\\n  /// @notice Stores benefit information by each beneficiary and token pair\\n  struct Benefit {\\n    uint256 amount; // Amount of vested token for the inputted beneficiary\\n    uint256 startDate; // Timestamp at which the benefit starts to take effect\\n    uint256 duration; // Seconds to unlock the full benefit\\n    uint256 released; // The amount of vested tokens already released\\n  }\\n\\n  // Views\\n\\n  /// @notice Lists users with an ongoing benefit\\n  /// @return _beneficiaries List of beneficiaries\\n  function getBeneficiaries() external view returns (address[] memory _beneficiaries);\\n\\n  /// @notice Lists all the tokens that are currently vested\\n  /// @return _tokens List of vested tokens\\n  function getTokens() external view returns (address[] memory _tokens);\\n\\n  /// @notice Lists the current vested tokens for the given address\\n  /// @param _beneficiary Address of the beneficiary\\n  /// @return _tokens List of vested tokens\\n  function getTokensOf(address _beneficiary) external view returns (address[] memory _tokens);\\n\\n  /// @notice Returns the benefit data for a given token and beneficiary\\n  /// @param _token Address of ERC20 token to be vested\\n  /// @param _beneficiary Address of the beneficiary\\n  /// @return amount Amount of vested token for the inputted beneficiary\\n  /// @return startDate Timestamp at which the benefit starts to take effect\\n  /// @return duration Seconds to unlock the full benefit\\n  /// @return released The amount of vested tokens already released\\n  function benefits(address _token, address _beneficiary)\\n    external\\n    view\\n    returns (\\n      uint256 amount,\\n      uint256 startDate,\\n      uint256 duration,\\n      uint256 released\\n    );\\n\\n  /// @notice Returns the end date of a vesting period\\n  /// @param _token Address of ERC20 vested token\\n  /// @param _beneficiary Address of the beneficiary\\n  /// @return _releaseDate The timestamp at which benefit will be fully released.\\n  function releaseDate(address _token, address _beneficiary) external view returns (uint256 _releaseDate);\\n\\n  /// @notice Returns the claimable amount of a vested token for a specific beneficiary\\n  /// @dev If the vesting period did not end, it returns a proportional claimable amount\\n  /// @dev If the vesting period is over, it returns the complete vested amount\\n  /// @param _token Address of ERC20 token to be vested\\n  /// @param _beneficiary Address of the beneficiary\\n  /// @return _claimableAmount The amount of the vested token the beneficiary can claim at this point in time\\n  function releasableAmount(address _token, address _beneficiary) external view returns (uint256 _claimableAmount);\\n\\n  /// @notice Returns the total amount of the given vested token across all beneficiaries\\n  /// @param _token Address of ERC20 token to be vested\\n  /// @return _totalAmount The total amount of requested tokens\\n  function totalAmountPerToken(address _token) external view returns (uint256 _totalAmount);\\n\\n  // Methods\\n\\n  /// @notice Creates a vest for a given beneficiary.\\n  /// @dev It will claim all previous benefits.\\n  /// @param _beneficiary Address of the beneficiary\\n  /// @param _startDate Timestamp at which the benefit starts to take effect\\n  /// @param _duration Seconds to unlock the full benefit\\n  /// @param _token Address of ERC20 token to be vested\\n  /// @param _amount Amount of vested token for the inputted beneficiary\\n  function addBenefit(\\n    address _beneficiary,\\n    uint256 _startDate,\\n    uint256 _duration,\\n    address _token,\\n    uint256 _amount\\n  ) external;\\n\\n  /// @notice Creates benefits for a group of beneficiaries\\n  /// @param _token Address of ERC20 token to be vested\\n  /// @param _beneficiaries Addresses of the beneficiaries\\n  /// @param _amounts Amounts of vested token for each beneficiary\\n  /// @param _startDate Timestamp at which the benefit starts to take effect\\n  /// @param _duration Seconds to unlock the full benefit\\n  function addBenefits(\\n    address _token,\\n    address[] memory _beneficiaries,\\n    uint256[] memory _amounts,\\n    uint256 _startDate,\\n    uint256 _duration\\n  ) external;\\n\\n  /// @notice Removes a given benefit\\n  /// @notice Releases the claimable balance and transfers the pending benefit to governance\\n  /// @param _token Address of ERC20 token to be vested\\n  /// @param _beneficiary Address of the beneficiary\\n  function removeBenefit(address _token, address _beneficiary) external;\\n\\n  /// @notice Removes all benefits from a given beneficiary\\n  /// @notice Releases the claimable balances and transfers the pending benefits to governance\\n  /// @param _beneficiary Address of the beneficiary\\n  function removeBeneficiary(address _beneficiary) external;\\n\\n  /// @notice Releases a token in its correspondent amount to the function caller\\n  /// @param _token Address of ERC20 token to be vested\\n  function release(address _token) external;\\n\\n  /// @notice Releases a token in its correspondent amount to a particular beneficiary\\n  /// @param _token Address of ERC20 token to be vested\\n  /// @param _beneficiary Address of the beneficiary\\n  function release(address _token, address _beneficiary) external;\\n\\n  /// @notice Releases a list of tokens in their correspondent amounts to the function caller\\n  /// @param _tokens List of ERC20 token to be vested\\n  function release(address[] memory _tokens) external;\\n\\n  /// @notice Releases a list of tokens in their correspondent amounts to a particular beneficiary\\n  /// @param _tokens List of ERC20 token to be vested\\n  /// @param _beneficiary Address of the beneficiary\\n  function release(address[] memory _tokens, address _beneficiary) external;\\n\\n  /// @notice Releases all tokens in their correspondent amounts to the function caller\\n  function releaseAll() external;\\n\\n  /// @notice Releases all tokens in their correspondent amounts to a particular beneficiary\\n  /// @param _beneficiary Address of the beneficiary\\n  function releaseAll(address _beneficiary) external;\\n}\\n\",\"keccak256\":\"0x43e5fcbd2f9a420fbe529c1a01fccc895f9412e5e80ec2da87e8e77b1aae839f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516118f33803806118f383398101604081905261002f9161007c565b806001600160a01b0381166100565760405162b293ed60e81b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055506100ac565b60006020828403121561008e57600080fd5b81516001600160a01b03811681146100a557600080fd5b9392505050565b611838806100bb6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063913b722c116100b8578063b8df2a1b1161007c578063b8df2a1b14610289578063bac9556d1461029c578063d402b4d4146102af578063df5da966146102c2578063f39c38a0146102e2578063fd1ccc42146102f557600080fd5b8063913b722c14610240578063a7d092b214610248578063aa6ca8081461025b578063ab033ea914610263578063b4e862351461027657600080fd5b8063550e5ac11161010a578063550e5ac1146101b3578063580fc80a146101c657806359633a1c146101d95780635aa6e675146101ec5780635be7fde8146102175780637243cfbb1461021f57600080fd5b80630986b210146101475780631916558714610170578063238efcbc14610185578063368090481461018d57806348b75044146101a0575b600080fd5b61015a610155366004611470565b610355565b6040516101679190611689565b60405180910390f35b61018361017e366004611470565b61037f565b005b61018361038c565b61018361019b36600461154e565b610415565b6101836101ae36600461148b565b610497565b6101836101c1366004611470565b6104a5565b6101836101d4366004611470565b6105d1565b6101836101e7366004611470565b61063d565b6000546101ff906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b6101836106c0565b61023261022d36600461148b565b610722565b604051908152602001610167565b61015a610798565b6101836102563660046115de565b6107a9565b61015a6107f7565b610183610271366004611470565b610803565b6101836102843660046114be565b610882565b61018361029736600461159c565b6109ac565b6102326102aa36600461148b565b6109fb565b6101836102bd36600461148b565b610a5a565b6102326102d0366004611470565b60066020526000908152604090205481565b6001546101ff906001600160a01b031681565b61033561030336600461148b565b600760209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610167565b6001600160a01b038116600090815260086020526040902060609061037990610a8f565b92915050565b6103898133610aa3565b50565b6001546001600160a01b031633146103b757604051637ef5703160e11b815260040160405180910390fd5b60018054600080546001600160a01b0383166001600160a01b031991821681179092559091169091556040519081527fc73be659241aade67e9a059bcf21494955018b213dbd1179054ccf928b13f3b69060200160405180910390a1565b6000546001600160a01b03163314610440576040516354348f0360e01b815260040160405180910390fd5b61044d8585858585610bd7565b6001600160a01b03821660009081526006602052604081208054839290610475908490611709565b9091555061049090506001600160a01b038316333084610d06565b5050505050565b6104a18282610aa3565b5050565b6000546001600160a01b031633146104d0576040516354348f0360e01b815260040160405180910390fd5b6001600160a01b0381166000818152600660205260408082205490516370a0823160e01b8152306004820152919290916370a082319060240160206040518083038186803b15801561052157600080fd5b505afa158015610535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105599190611654565b6105639190611762565b600054909150610580906001600160a01b03848116911683610d71565b600054604080516001600160a01b0385811682526020820185905290921682820152517f9a3055ded8c8b5f21bbf4946c5afab6e1fa8b3f057922658e5e1ade125fb0b1e9181900360600190a15050565b6001600160a01b03811660009081526008602052604081206105f290610a8f565b805190915060005b8181101561063757610625838281518110610617576106176117ec565b602002602001015185610aa3565b8061062f816117a5565b9150506105fa565b50505050565b6000546001600160a01b03163314610668576040516354348f0360e01b815260040160405180910390fd5b6001600160a01b038116600090815260086020526040812061068990610da1565b1115610389576001600160a01b03811660009081526008602052604081206106bb916106b59190610dab565b82610db7565b610668565b3360009081526008602052604081206106d890610a8f565b805190915060005b8181101561071d5761070b8382815181106106fd576106fd6117ec565b602002602001015133610aa3565b80610715816117a5565b9150506106e0565b505050565b6001600160a01b03808316600090815260076020908152604080832093851683529281528282208351608081018552815481526001820154928101929092526002810154938201939093526003909201546060830181905290919061078682610e97565b6107909190611762565b949350505050565b60606107a46004610a8f565b905090565b8160005b81811015610490576107e58585838181106107ca576107ca6117ec565b90506020020160208101906107df9190611470565b84610aa3565b806107ef816117a5565b9150506107ad565b60606107a46002610a8f565b6000546001600160a01b0316331461082e576040516354348f0360e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fe987aaedf9d279143bdf1eee16cf1d0feb47742867d81083df8d6cd0a5ac857f9060200160405180910390a150565b6000546001600160a01b031633146108ad576040516354348f0360e01b815260040160405180910390fd5b848381146108ce5760405163c2717c7160e01b815260040160405180910390fd5b6000805b8281101561095d576109258989838181106108ef576108ef6117ec565b90506020020160208101906109049190611470565b86868d8b8b87818110610919576109196117ec565b90506020020135610bd7565b868682818110610937576109376117ec565b90506020020135826109499190611709565b915080610955816117a5565b9150506108d2565b506001600160a01b03891660009081526006602052604081208054839290610986908490611709565b909155506109a190506001600160a01b038a16333084610d06565b505050505050505050565b803360005b82811015610490576109e98585838181106109ce576109ce6117ec565b90506020020160208101906109e39190611470565b83610aa3565b806109f3816117a5565b9150506109b1565b6001600160a01b0380831660009081526007602090815260408083209385168352928152828220835160808101855281548152600182015492810183905260028201549481018590526003909101546060820152919261079091611709565b6000546001600160a01b03163314610a85576040516354348f0360e01b815260040160405180910390fd5b6104a18282610db7565b60606000610a9c83610eef565b9392505050565b6001600160a01b03808316600090815260076020908152604080832093851683529281528282206003810154845160808101865282548152600183015493810193909352600282015494830194909452606082018490529290610b0590610e97565b610b0f9190611762565b905080610b1c5750505050565b80826003016000828254610b309190611709565b90915550506001600160a01b03841660009081526006602052604081208054839290610b5d908490611762565b9091555050815460038301541415610b7957610b798484610f4b565b610b84848483610d71565b826001600160a01b0316846001600160a01b03167f912d56c6799e46305ea2b933a5c2cee2a5e05c9cf0eb6e7086b53e487eab24da83604051610bc991815260200190565b60405180910390a350505050565b6001600160a01b0385166000908152600860205260409020610bf99083610ff3565b15610c0857610c088286610aa3565b610c13600486611015565b50610c1f600283611015565b506001600160a01b0385166000908152600860205260409020610c429083611015565b506001600160a01b0380831660009081526007602090815260408083209389168352929052908120600181018690556002810185905560038101548154919291610c8c9190611762565b9050610c988184611709565b808355600060038401556001600160a01b0380891691908616907fe0ecbc03c8bdc4a2f3d5082b8904f4b4ac98cdd4e28c3b66f2cd41a3530a78a49089610cdf8a82611709565b6040805193845260208401929092529082015260600160405180910390a350505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106379085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261102a565b6040516001600160a01b03831660248201526044810182905261071d90849063a9059cbb60e01b90606401610d3a565b6000610379825490565b6000610a9c8383611101565b610dc18282610aa3565b6001600160a01b038083166000908152600760209081526040808320938516835292905290812060038101548154919291610dfc9190611762565b6001600160a01b038516600090815260066020526040812080549293508392909190610e29908490611762565b90915550508015610e4857610e486001600160a01b0385163383610d71565b610e528484610f4b565b826001600160a01b0316846001600160a01b03167f924ee3a0c84530f8224d0ce3066703c4d60b984708571c7a89f549ace5f8a3e883604051610bc991815260200190565b60208101516040820151825160009242929091828411610ebd5750600095945050505050565b610ee58183610ecc8688611762565b610ed69085611743565b610ee09190611721565b61112b565b9695505050505050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f3f57602002820191906000526020600020905b815481526020019060010190808311610f2b575b50505050509050919050565b6001600160a01b038083166000908152600760209081526040808320938516835292815282822082815560018101839055600281018390556003018290556008905220610f989083611141565b506001600160a01b0381166000908152600860205260409020610fba90610da1565b610fcb57610fc9600482611141565b505b6001600160a01b0382166000908152600660205260409020546104a15761071d600283611141565b6001600160a01b03811660009081526001830160205260408120541515610a9c565b6000610a9c836001600160a01b038416611156565b600061107f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111a59092919063ffffffff16565b80519091501561071d578080602001905181019061109d9190611632565b61071d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6000826000018281548110611118576111186117ec565b9060005260206000200154905092915050565b600081831061113a5781610a9c565b5090919050565b6000610a9c836001600160a01b0384166111b4565b600081815260018301602052604081205461119d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610379565b506000610379565b606061079084846000856112a7565b6000818152600183016020526040812054801561129d5760006111d8600183611762565b85549091506000906111ec90600190611762565b905081811461125157600086600001828154811061120c5761120c6117ec565b906000526020600020015490508087600001848154811061122f5761122f6117ec565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611262576112626117d6565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610379565b6000915050610379565b6060824710156113085760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016110f8565b843b6113565760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016110f8565b600080866001600160a01b03168587604051611372919061166d565b60006040518083038185875af1925050503d80600081146113af576040519150601f19603f3d011682016040523d82523d6000602084013e6113b4565b606091505b50915091506113c48282866113cf565b979650505050505050565b606083156113de575081610a9c565b8251156113ee5782518084602001fd5b8160405162461bcd60e51b81526004016110f891906116d6565b80356001600160a01b038116811461141f57600080fd5b919050565b60008083601f84011261143657600080fd5b50813567ffffffffffffffff81111561144e57600080fd5b6020830191508360208260051b850101111561146957600080fd5b9250929050565b60006020828403121561148257600080fd5b610a9c82611408565b6000806040838503121561149e57600080fd5b6114a783611408565b91506114b560208401611408565b90509250929050565b600080600080600080600060a0888a0312156114d957600080fd5b6114e288611408565b9650602088013567ffffffffffffffff808211156114ff57600080fd5b61150b8b838c01611424565b909850965060408a013591508082111561152457600080fd5b506115318a828b01611424565b989b979a5095989597966060870135966080013595509350505050565b600080600080600060a0868803121561156657600080fd5b61156f86611408565b9450602086013593506040860135925061158b60608701611408565b949793965091946080013592915050565b600080602083850312156115af57600080fd5b823567ffffffffffffffff8111156115c657600080fd5b6115d285828601611424565b90969095509350505050565b6000806000604084860312156115f357600080fd5b833567ffffffffffffffff81111561160a57600080fd5b61161686828701611424565b9094509250611629905060208501611408565b90509250925092565b60006020828403121561164457600080fd5b81518015158114610a9c57600080fd5b60006020828403121561166657600080fd5b5051919050565b6000825161167f818460208701611779565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156116ca5783516001600160a01b0316835292840192918401916001016116a5565b50909695505050505050565b60208152600082518060208401526116f5816040850160208701611779565b601f01601f19169190910160400192915050565b6000821982111561171c5761171c6117c0565b500190565b60008261173e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561175d5761175d6117c0565b500290565b600082821015611774576117746117c0565b500390565b60005b8381101561179457818101518382015260200161177c565b838111156106375750506000910152565b60006000198214156117b9576117b96117c0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bddc100df205f703b62f7c3f9dbf9807d3001beb3f19fcefa528eb0ff88845ce64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c8063913b722c116100b8578063b8df2a1b1161007c578063b8df2a1b14610289578063bac9556d1461029c578063d402b4d4146102af578063df5da966146102c2578063f39c38a0146102e2578063fd1ccc42146102f557600080fd5b8063913b722c14610240578063a7d092b214610248578063aa6ca8081461025b578063ab033ea914610263578063b4e862351461027657600080fd5b8063550e5ac11161010a578063550e5ac1146101b3578063580fc80a146101c657806359633a1c146101d95780635aa6e675146101ec5780635be7fde8146102175780637243cfbb1461021f57600080fd5b80630986b210146101475780631916558714610170578063238efcbc14610185578063368090481461018d57806348b75044146101a0575b600080fd5b61015a610155366004611470565b610355565b6040516101679190611689565b60405180910390f35b61018361017e366004611470565b61037f565b005b61018361038c565b61018361019b36600461154e565b610415565b6101836101ae36600461148b565b610497565b6101836101c1366004611470565b6104a5565b6101836101d4366004611470565b6105d1565b6101836101e7366004611470565b61063d565b6000546101ff906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b6101836106c0565b61023261022d36600461148b565b610722565b604051908152602001610167565b61015a610798565b6101836102563660046115de565b6107a9565b61015a6107f7565b610183610271366004611470565b610803565b6101836102843660046114be565b610882565b61018361029736600461159c565b6109ac565b6102326102aa36600461148b565b6109fb565b6101836102bd36600461148b565b610a5a565b6102326102d0366004611470565b60066020526000908152604090205481565b6001546101ff906001600160a01b031681565b61033561030336600461148b565b600760209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610167565b6001600160a01b038116600090815260086020526040902060609061037990610a8f565b92915050565b6103898133610aa3565b50565b6001546001600160a01b031633146103b757604051637ef5703160e11b815260040160405180910390fd5b60018054600080546001600160a01b0383166001600160a01b031991821681179092559091169091556040519081527fc73be659241aade67e9a059bcf21494955018b213dbd1179054ccf928b13f3b69060200160405180910390a1565b6000546001600160a01b03163314610440576040516354348f0360e01b815260040160405180910390fd5b61044d8585858585610bd7565b6001600160a01b03821660009081526006602052604081208054839290610475908490611709565b9091555061049090506001600160a01b038316333084610d06565b5050505050565b6104a18282610aa3565b5050565b6000546001600160a01b031633146104d0576040516354348f0360e01b815260040160405180910390fd5b6001600160a01b0381166000818152600660205260408082205490516370a0823160e01b8152306004820152919290916370a082319060240160206040518083038186803b15801561052157600080fd5b505afa158015610535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105599190611654565b6105639190611762565b600054909150610580906001600160a01b03848116911683610d71565b600054604080516001600160a01b0385811682526020820185905290921682820152517f9a3055ded8c8b5f21bbf4946c5afab6e1fa8b3f057922658e5e1ade125fb0b1e9181900360600190a15050565b6001600160a01b03811660009081526008602052604081206105f290610a8f565b805190915060005b8181101561063757610625838281518110610617576106176117ec565b602002602001015185610aa3565b8061062f816117a5565b9150506105fa565b50505050565b6000546001600160a01b03163314610668576040516354348f0360e01b815260040160405180910390fd5b6001600160a01b038116600090815260086020526040812061068990610da1565b1115610389576001600160a01b03811660009081526008602052604081206106bb916106b59190610dab565b82610db7565b610668565b3360009081526008602052604081206106d890610a8f565b805190915060005b8181101561071d5761070b8382815181106106fd576106fd6117ec565b602002602001015133610aa3565b80610715816117a5565b9150506106e0565b505050565b6001600160a01b03808316600090815260076020908152604080832093851683529281528282208351608081018552815481526001820154928101929092526002810154938201939093526003909201546060830181905290919061078682610e97565b6107909190611762565b949350505050565b60606107a46004610a8f565b905090565b8160005b81811015610490576107e58585838181106107ca576107ca6117ec565b90506020020160208101906107df9190611470565b84610aa3565b806107ef816117a5565b9150506107ad565b60606107a46002610a8f565b6000546001600160a01b0316331461082e576040516354348f0360e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fe987aaedf9d279143bdf1eee16cf1d0feb47742867d81083df8d6cd0a5ac857f9060200160405180910390a150565b6000546001600160a01b031633146108ad576040516354348f0360e01b815260040160405180910390fd5b848381146108ce5760405163c2717c7160e01b815260040160405180910390fd5b6000805b8281101561095d576109258989838181106108ef576108ef6117ec565b90506020020160208101906109049190611470565b86868d8b8b87818110610919576109196117ec565b90506020020135610bd7565b868682818110610937576109376117ec565b90506020020135826109499190611709565b915080610955816117a5565b9150506108d2565b506001600160a01b03891660009081526006602052604081208054839290610986908490611709565b909155506109a190506001600160a01b038a16333084610d06565b505050505050505050565b803360005b82811015610490576109e98585838181106109ce576109ce6117ec565b90506020020160208101906109e39190611470565b83610aa3565b806109f3816117a5565b9150506109b1565b6001600160a01b0380831660009081526007602090815260408083209385168352928152828220835160808101855281548152600182015492810183905260028201549481018590526003909101546060820152919261079091611709565b6000546001600160a01b03163314610a85576040516354348f0360e01b815260040160405180910390fd5b6104a18282610db7565b60606000610a9c83610eef565b9392505050565b6001600160a01b03808316600090815260076020908152604080832093851683529281528282206003810154845160808101865282548152600183015493810193909352600282015494830194909452606082018490529290610b0590610e97565b610b0f9190611762565b905080610b1c5750505050565b80826003016000828254610b309190611709565b90915550506001600160a01b03841660009081526006602052604081208054839290610b5d908490611762565b9091555050815460038301541415610b7957610b798484610f4b565b610b84848483610d71565b826001600160a01b0316846001600160a01b03167f912d56c6799e46305ea2b933a5c2cee2a5e05c9cf0eb6e7086b53e487eab24da83604051610bc991815260200190565b60405180910390a350505050565b6001600160a01b0385166000908152600860205260409020610bf99083610ff3565b15610c0857610c088286610aa3565b610c13600486611015565b50610c1f600283611015565b506001600160a01b0385166000908152600860205260409020610c429083611015565b506001600160a01b0380831660009081526007602090815260408083209389168352929052908120600181018690556002810185905560038101548154919291610c8c9190611762565b9050610c988184611709565b808355600060038401556001600160a01b0380891691908616907fe0ecbc03c8bdc4a2f3d5082b8904f4b4ac98cdd4e28c3b66f2cd41a3530a78a49089610cdf8a82611709565b6040805193845260208401929092529082015260600160405180910390a350505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106379085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261102a565b6040516001600160a01b03831660248201526044810182905261071d90849063a9059cbb60e01b90606401610d3a565b6000610379825490565b6000610a9c8383611101565b610dc18282610aa3565b6001600160a01b038083166000908152600760209081526040808320938516835292905290812060038101548154919291610dfc9190611762565b6001600160a01b038516600090815260066020526040812080549293508392909190610e29908490611762565b90915550508015610e4857610e486001600160a01b0385163383610d71565b610e528484610f4b565b826001600160a01b0316846001600160a01b03167f924ee3a0c84530f8224d0ce3066703c4d60b984708571c7a89f549ace5f8a3e883604051610bc991815260200190565b60208101516040820151825160009242929091828411610ebd5750600095945050505050565b610ee58183610ecc8688611762565b610ed69085611743565b610ee09190611721565b61112b565b9695505050505050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f3f57602002820191906000526020600020905b815481526020019060010190808311610f2b575b50505050509050919050565b6001600160a01b038083166000908152600760209081526040808320938516835292815282822082815560018101839055600281018390556003018290556008905220610f989083611141565b506001600160a01b0381166000908152600860205260409020610fba90610da1565b610fcb57610fc9600482611141565b505b6001600160a01b0382166000908152600660205260409020546104a15761071d600283611141565b6001600160a01b03811660009081526001830160205260408120541515610a9c565b6000610a9c836001600160a01b038416611156565b600061107f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111a59092919063ffffffff16565b80519091501561071d578080602001905181019061109d9190611632565b61071d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6000826000018281548110611118576111186117ec565b9060005260206000200154905092915050565b600081831061113a5781610a9c565b5090919050565b6000610a9c836001600160a01b0384166111b4565b600081815260018301602052604081205461119d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610379565b506000610379565b606061079084846000856112a7565b6000818152600183016020526040812054801561129d5760006111d8600183611762565b85549091506000906111ec90600190611762565b905081811461125157600086600001828154811061120c5761120c6117ec565b906000526020600020015490508087600001848154811061122f5761122f6117ec565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611262576112626117d6565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610379565b6000915050610379565b6060824710156113085760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016110f8565b843b6113565760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016110f8565b600080866001600160a01b03168587604051611372919061166d565b60006040518083038185875af1925050503d80600081146113af576040519150601f19603f3d011682016040523d82523d6000602084013e6113b4565b606091505b50915091506113c48282866113cf565b979650505050505050565b606083156113de575081610a9c565b8251156113ee5782518084602001fd5b8160405162461bcd60e51b81526004016110f891906116d6565b80356001600160a01b038116811461141f57600080fd5b919050565b60008083601f84011261143657600080fd5b50813567ffffffffffffffff81111561144e57600080fd5b6020830191508360208260051b850101111561146957600080fd5b9250929050565b60006020828403121561148257600080fd5b610a9c82611408565b6000806040838503121561149e57600080fd5b6114a783611408565b91506114b560208401611408565b90509250929050565b600080600080600080600060a0888a0312156114d957600080fd5b6114e288611408565b9650602088013567ffffffffffffffff808211156114ff57600080fd5b61150b8b838c01611424565b909850965060408a013591508082111561152457600080fd5b506115318a828b01611424565b989b979a5095989597966060870135966080013595509350505050565b600080600080600060a0868803121561156657600080fd5b61156f86611408565b9450602086013593506040860135925061158b60608701611408565b949793965091946080013592915050565b600080602083850312156115af57600080fd5b823567ffffffffffffffff8111156115c657600080fd5b6115d285828601611424565b90969095509350505050565b6000806000604084860312156115f357600080fd5b833567ffffffffffffffff81111561160a57600080fd5b61161686828701611424565b9094509250611629905060208501611408565b90509250925092565b60006020828403121561164457600080fd5b81518015158114610a9c57600080fd5b60006020828403121561166657600080fd5b5051919050565b6000825161167f818460208701611779565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156116ca5783516001600160a01b0316835292840192918401916001016116a5565b50909695505050505050565b60208152600082518060208401526116f5816040850160208701611779565b601f01601f19169190910160400192915050565b6000821982111561171c5761171c6117c0565b500190565b60008261173e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561175d5761175d6117c0565b500290565b600082821015611774576117746117c0565b500390565b60005b8381101561179457818101518382015260200161177c565b838111156106375750506000910152565b60006000198214156117b9576117b96117c0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bddc100df205f703b62f7c3f9dbf9807d3001beb3f19fcefa528eb0ff88845ce64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addBenefit(address,uint256,uint256,address,uint256)": {
        "details": "It will claim all previous benefits.",
        "params": {
          "_amount": "Amount of vested token for the inputted beneficiary",
          "_beneficiary": "Address of the beneficiary",
          "_duration": "Seconds to unlock the full benefit",
          "_startDate": "Timestamp at which the benefit starts to take effect",
          "_token": "Address of ERC20 token to be vested"
        }
      },
      "addBenefits(address,address[],uint256[],uint256,uint256)": {
        "params": {
          "_amounts": "Amounts of vested token for each beneficiary",
          "_beneficiaries": "Addresses of the beneficiaries",
          "_duration": "Seconds to unlock the full benefit",
          "_startDate": "Timestamp at which the benefit starts to take effect",
          "_token": "Address of ERC20 token to be vested"
        }
      },
      "getBeneficiaries()": {
        "returns": {
          "_0": "List of beneficiaries"
        }
      },
      "getTokens()": {
        "returns": {
          "_0": "List of vested tokens"
        }
      },
      "getTokensOf(address)": {
        "params": {
          "_beneficiary": "Address of the beneficiary"
        },
        "returns": {
          "_0": "List of vested tokens"
        }
      },
      "releasableAmount(address,address)": {
        "details": "If the vesting period did not end, it returns a proportional claimable amountIf the vesting period is over, it returns the complete vested amount",
        "params": {
          "_beneficiary": "Address of the beneficiary",
          "_token": "Address of ERC20 token to be vested"
        },
        "returns": {
          "_0": "The amount of the vested token the beneficiary can claim at this point in time"
        }
      },
      "release(address)": {
        "params": {
          "_token": "Address of ERC20 token to be vested"
        }
      },
      "release(address,address)": {
        "params": {
          "_beneficiary": "Address of the beneficiary",
          "_token": "Address of ERC20 token to be vested"
        }
      },
      "release(address[])": {
        "params": {
          "_tokens": "List of ERC20 token to be vested"
        }
      },
      "release(address[],address)": {
        "params": {
          "_beneficiary": "Address of the beneficiary",
          "_tokens": "List of ERC20 token to be vested"
        }
      },
      "releaseAll(address)": {
        "params": {
          "_beneficiary": "Address of the beneficiary"
        }
      },
      "releaseDate(address,address)": {
        "params": {
          "_beneficiary": "Address of the beneficiary",
          "_token": "Address of ERC20 vested token"
        },
        "returns": {
          "_0": "The timestamp at which benefit will be fully released."
        }
      },
      "removeBeneficiary(address)": {
        "params": {
          "_beneficiary": "Address of the beneficiary"
        }
      },
      "removeBenefit(address,address)": {
        "params": {
          "_beneficiary": "Address of the beneficiary",
          "_token": "Address of ERC20 token to be vested"
        }
      },
      "sendDust(address)": {
        "params": {
          "_token": "The token that will be transferred"
        }
      },
      "setGovernance(address)": {
        "params": {
          "_governance": "The address of the user proposed to be the new governance"
        }
      }
    },
    "stateVariables": {
      "benefits": {
        "params": {
          "_beneficiary": "Address of the beneficiary",
          "_token": "Address of ERC20 token to be vested"
        },
        "returns": {
          "amount": "Amount of vested token for the inputted beneficiary",
          "duration": "Seconds to unlock the full benefit",
          "released": "The amount of vested tokens already released",
          "startDate": "Timestamp at which the benefit starts to take effect"
        }
      },
      "totalAmountPerToken": {
        "params": {
          "_token": "Address of ERC20 token to be vested"
        },
        "return": "_totalAmount The total amount of requested tokens",
        "returns": {
          "_0": "_totalAmount The total amount of requested tokens"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "NoGovernanceZeroAddress()": [
        {
          "notice": "Throws if trying to set governance to zero address"
        }
      ],
      "OnlyGovernance()": [
        {
          "notice": "Throws if the caller of the function is not governance"
        }
      ],
      "OnlyPendingGovernance()": [
        {
          "notice": "Throws if the caller of the function is not pendingGovernance"
        }
      ],
      "WrongLengthAmounts()": [
        {
          "notice": "Throws when the length of the amounts do not match"
        }
      ],
      "ZeroAddress()": [
        {
          "notice": "Throws if a variable is assigned to the zero address"
        }
      ]
    },
    "events": {
      "BenefitAdded(address,address,uint256,uint256,uint256)": {
        "notice": "Emitted when a benefit is successfully added"
      },
      "BenefitReleased(address,address,uint256)": {
        "notice": "Emitted when a benefit is successfully released"
      },
      "BenefitRemoved(address,address,uint256)": {
        "notice": "Emitted when a benefit is successfully removed"
      },
      "DustSent(address,uint256,address)": {
        "notice": "Emitted when dust is sent"
      },
      "GovernanceProposal(address)": {
        "notice": "Emitted when a new governance is proposed"
      },
      "GovernanceSet(address)": {
        "notice": "Emitted when pendingGovernance accepts to be governance"
      }
    },
    "kind": "user",
    "methods": {
      "acceptGovernance()": {
        "notice": "Changes the governance from the current governance to the previously proposed address"
      },
      "addBenefit(address,uint256,uint256,address,uint256)": {
        "notice": "Creates a vest for a given beneficiary."
      },
      "addBenefits(address,address[],uint256[],uint256,uint256)": {
        "notice": "Creates benefits for a group of beneficiaries"
      },
      "benefits(address,address)": {
        "notice": "Returns the benefit data for a given token and beneficiary"
      },
      "getBeneficiaries()": {
        "notice": "Lists users with an ongoing benefit"
      },
      "getTokens()": {
        "notice": "Lists all the tokens that are currently vested"
      },
      "getTokensOf(address)": {
        "notice": "Lists the current vested tokens for the given address"
      },
      "governance()": {
        "notice": "Stores the governance address"
      },
      "pendingGovernance()": {
        "notice": "Stores the pendingGovernance address"
      },
      "releasableAmount(address,address)": {
        "notice": "Returns the claimable amount of a vested token for a specific beneficiary"
      },
      "release(address)": {
        "notice": "Releases a token in its correspondent amount to the function caller"
      },
      "release(address,address)": {
        "notice": "Releases a token in its correspondent amount to a particular beneficiary"
      },
      "release(address[])": {
        "notice": "Releases a list of tokens in their correspondent amounts to the function caller"
      },
      "release(address[],address)": {
        "notice": "Releases a list of tokens in their correspondent amounts to a particular beneficiary"
      },
      "releaseAll()": {
        "notice": "Releases all tokens in their correspondent amounts to the function caller"
      },
      "releaseAll(address)": {
        "notice": "Releases all tokens in their correspondent amounts to a particular beneficiary"
      },
      "releaseDate(address,address)": {
        "notice": "Returns the end date of a vesting period"
      },
      "removeBeneficiary(address)": {
        "notice": "Removes all benefits from a given beneficiaryReleases the claimable balances and transfers the pending benefits to governance"
      },
      "removeBenefit(address,address)": {
        "notice": "Removes a given benefitReleases the claimable balance and transfers the pending benefit to governance"
      },
      "sendDust(address)": {
        "notice": "Allows an authorized user to transfer the tokens or eth that may have been left in a contract"
      },
      "setGovernance(address)": {
        "notice": "Proposes a new address to be governance"
      },
      "totalAmountPerToken(address)": {
        "notice": "Returns the total amount of the given vested token across all beneficiaries"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1887,
        "contract": "contracts/VestingWallet.sol:VestingWallet",
        "label": "governance",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1891,
        "contract": "contracts/VestingWallet.sol:VestingWallet",
        "label": "pendingGovernance",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1998,
        "contract": "contracts/VestingWallet.sol:VestingWallet",
        "label": "_vestedTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(AddressSet)1591_storage"
      },
      {
        "astId": 2001,
        "contract": "contracts/VestingWallet.sol:VestingWallet",
        "label": "_beneficiaries",
        "offset": 0,
        "slot": "4",
        "type": "t_struct(AddressSet)1591_storage"
      },
      {
        "astId": 2007,
        "contract": "contracts/VestingWallet.sol:VestingWallet",
        "label": "totalAmountPerToken",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2016,
        "contract": "contracts/VestingWallet.sol:VestingWallet",
        "label": "benefits",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Benefit)3045_storage))"
      },
      {
        "astId": 2021,
        "contract": "contracts/VestingWallet.sol:VestingWallet",
        "label": "_tokensPerBeneficiary",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(AddressSet)1591_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Benefit)3045_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct IVestingWallet.Benefit))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Benefit)3045_storage)"
      },
      "t_mapping(t_address,t_struct(AddressSet)1591_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)1591_storage"
      },
      "t_mapping(t_address,t_struct(Benefit)3045_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IVestingWallet.Benefit)",
        "numberOfBytes": "32",
        "value": "t_struct(Benefit)3045_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)1591_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 1590,
            "contract": "contracts/VestingWallet.sol:VestingWallet",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)1290_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Benefit)3045_storage": {
        "encoding": "inplace",
        "label": "struct IVestingWallet.Benefit",
        "members": [
          {
            "astId": 3038,
            "contract": "contracts/VestingWallet.sol:VestingWallet",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3040,
            "contract": "contracts/VestingWallet.sol:VestingWallet",
            "label": "startDate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3042,
            "contract": "contracts/VestingWallet.sol:VestingWallet",
            "label": "duration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3044,
            "contract": "contracts/VestingWallet.sol:VestingWallet",
            "label": "released",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Set)1290_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 1285,
            "contract": "contracts/VestingWallet.sol:VestingWallet",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 1289,
            "contract": "contracts/VestingWallet.sol:VestingWallet",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}